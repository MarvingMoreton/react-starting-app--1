{"ast":null,"code":"var _jsxFileName = \"/Users/marving/code/MarvingMoreton/react-starting-app--1/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = React.useState(\"2020\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  }; // Updating list array displayed in accordance to Year Filtered:\n\n\n  const filteredExpenses = props.items.filter(expense => {\n    // Comparing if the year of THIS expense.date match the current filtered year.\n    // If true, the expense object (instnace) will be kept in the array filteredExpenses and display thanks to the map method called below\n    return expense.date.getFullYear().toString() === filteredYear; //\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","ExpenseItem","ExpensesFilter","Card","Expenses","props","filteredYear","setFilteredYear","useState","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"sources":["/Users/marving/code/MarvingMoreton/react-starting-app--1/src/components/Expenses/Expenses.js"],"sourcesContent":["import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\n\nimport \"./Expenses.css\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = React.useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  // Updating list array displayed in accordance to Year Filtered:\n  const filteredExpenses = props.items.filter((expense) => {\n    // Comparing if the year of THIS expense.date match the current filtered year.\n    // If true, the expense object (instnace) will be kept in the array filteredExpenses and display thanks to the map method called below\n    return expense.date.getFullYear().toString() === filteredYear;\n    //\n  });\n\n  let expensesContent = <p>No expenses found.</p>;\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n    ));\n  }\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangeFilter={filterChangeHandler}\n        />\n        {expensesContent}\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACvB,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,KAAK,CAACQ,QAAN,CAAe,MAAf,CAAxC;;EAEA,MAAMC,mBAAmB,GAAIC,YAAD,IAAkB;IAC5CH,eAAe,CAACG,YAAD,CAAf;EACD,CAFD,CAHuB,CAOvB;;;EACA,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;IACvD;IACA;IACA,OAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CX,YAAjD,CAHuD,CAIvD;EACD,CALwB,CAAzB;;EAOA,IAAIY,eAAe,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAtB;;EAEA,IAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;IAC/BD,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACrC,QAAC,WAAD;MAEE,KAAK,EAAEA,OAAO,CAACO,KAFjB;MAGE,MAAM,EAAEP,OAAO,CAACQ,MAHlB;MAIE,IAAI,EAAER,OAAO,CAACC;IAJhB,GACOD,OAAO,CAACS,EADf;MAAA;MAAA;MAAA;IAAA,QADgB,CAAlB;EAQD;;EACD,oBACE;IAAA,uBACE,QAAC,IAAD;MAAM,SAAS,EAAC,UAAhB;MAAA,wBACE,QAAC,cAAD;QACE,QAAQ,EAAEjB,YADZ;QAEE,cAAc,EAAEG;MAFlB;QAAA;QAAA;QAAA;MAAA,QADF,EAKGS,eALH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAtCQd,Q;;KAAAA,Q;AAwCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}